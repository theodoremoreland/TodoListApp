/**
 * @format
 */
import 'react-native-gesture-handler';
import {AppRegistry} from 'react-native';
import App from './src/App';
import {name as appName} from './app.json';
import PushNotification from 'react-native-push-notification';


PushNotification.createChannel ({
  channelId: "com.todolistapp", // (required)
  channelName: "com.todolistapp", // (required)
  channelDescription: "A channel to categorize your notifications", // (optional) default: undefined.
  playSound: false, // (optional) default: true
  soundName: "default", // (optional) See soundName parameter of localNotification function
  importance: 4, // (optional) default: 4. Int value of the Android notification importance
  vibrate: true, // (optional) default: true. Creates the default vibration patten if true.
},
(created) => console.log (`createChannel returned ${created}`) // (optional) callback returns whether the channel was created, false means it already existed.
);


PushNotification.configure({

    // (optional) Called when Token is generated (iOS and Android)
    onRegister: function(token) {
        console.log( 'TOKEN:', token );
    },

    // (required) Called when a remote or local notification is opened or received
    onNotification: function(notification) {
        console.log( 'NOTIFICATION:', notification );
      //   {
      //     foreground: false, // BOOLEAN: If the notification was received in foreground or not
      //     userInteraction: false, // BOOLEAN: If the notification was opened by the user from the notification area or not
      //     message: 'My Notification Message', // STRING: The notification message
      //     data: {}, // OBJECT: The push data
      // }
    },

    // IOS ONLY (optional): default: all - Permissions to register.
    permissions: {
        alert: true,
        badge: true,
        sound: true
    },

    // Should the initial notification be popped automatically
    // default: true
    popInitialNotification: true,

    /**
      * (optional) default: true
      * - Specified if permissions (ios) and token (android and ios) will requested or not,
      * - if not, you must call PushNotificationsHandler.requestPermissions() later
      */
    requestPermissions: false,
});


const j = () => {
    PushNotification.localNotification(    {/* Android Only Properties */
      channelId: "com.todolistapp",
      id: 0, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      message: "hello",
      title: "this is title",
      autoCancel: true, // (optional) default: true
      color: "red", // (optional) default: system default
      vibrate: true, // (optional) default: true
      vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
      ongoing: false, // (optional) set whether this is an "ongoing" notification);
    })
};

j();

AppRegistry.registerComponent(appName, () => App);
